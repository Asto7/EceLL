
  <form class="" action="/FM/edit/{{fm.id}}" method="post">
<div class="card card-body" style=" margin:auto; float:center; width:70%; height:100%; ">
<center>  <input name="title" value="{{fm.title}}" required style="border-style:none;  text-align: center; font-size:20px; letter-spacing:1px; border-bottom:1px solid black;"placeholder="Title..."value={{title}}></center>
    <div class="form-group">
      <label for="code">Code:</label>

          <div style=" border-radius: 10px;border-width: 1px; border-style: solid; border-color: blue; float:center;  scroll:auto; width:100%; height:15rem;" id="editor"></div>
      <textarea class="form-control" style="display: none;margin:auto; border-color: blue; float:center;  scroll:auto; width:100%; height:15rem;" value='{{fm.code}}' name="code" id="code" type="text" >{{fm.code}}</textarea>
    </div>
  <center> <div class="btn-group">
                      <button type="button" id="ss" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      Select Language<span class="caret"></span>
                      </button>
                      <ul style='list-style:none; color:crimson;' class="dropdown-menu">
                        <center><li style='cursor:pointer;' onclick="Language()">Html</li>
                          <li role="separator" class="divider"></li>
                        <li style='cursor:pointer;' onclick="Language()">Cpp</li>
                        <li style='cursor:pointer;' onclick="Language()">Javascript</li>
                      </ul>
                    </div></center>
    <div class="form-group">
      <label for="details">ReadMe:</label>
      <textarea class="form-control" style=" margin:auto; border-color: blue; float:center;  scroll:auto; width:100%; height:5rem;" value='{{fm.details}}' name="details" type="text" >{{fm.details}}</textarea>
    </div>

    <div class="form-group">
    <input type="file" id="files" name="file" />
    <span class="readBytesButtons">
      <span style="background-color: black; color:white; padding:5px; border-radius: 5px; letter-spacing: 1.5px; font-size: 15px; font-family:cursive; cursor:pointer;">Push Code!</span>
    </div>


    <button type="submit"   id='btn' style="display:block;" class="btn btn-dark">Submit</button>
</div>
</form>

<script type="text/javascript">
function  Language(){

if(event.target.innerHTML=='Html'){
  editor.session.setMode("ace/mode/html");
// console.log("FW");
}
else if(event.target.innerHTML=='Cpp'){
  editor.session.setMode("ace/mode/c_cpp");
  // console.log("cpp");
  }
else{
  // console.log("js");
  editor.session.setMode("ace/mode/javascript");
}}
</script>
<script>

      var editor = ace.edit("editor");
      editor.session.setMode("ace/mode/html");
    editor.setTheme("ace/theme/github");
    var EditSession = require("ace/edit_session").EditSession;

var js = new EditSession(document.getElementById('code').value);
var css = new EditSession(["some", "css", "code here"]);
// and then to load document into editor, just call

editor.setSession(js)
    editor.setReadOnly(false)
    editor.setOptions({
    autoScrollEditorIntoView: true,
    copyWithEmptySelection: true,
});

    // editor.session.setMode("ace/mode/javascript");
    // editor.session.setMode("ace/mode/html");

    editor.session.setMode("ace/mode/c_cpp");

</script>


<script>
  function readBlob(opt_startByte, opt_stopByte) {

    var files = document.getElementById('files').files;
    if (!files.length) {
      alert('Please select a file!');
      return;
    }

    var file = files[0];
    var start = parseInt(opt_startByte) || 0;
    var stop = parseInt(opt_stopByte) || file.size - 1;

    var reader = new FileReader();

    // If we use onloadend, we need to check the readyState.
    reader.onloadend = function(evt) {
      if (evt.target.readyState == FileReader.DONE) { // DONE == 2
        document.getElementById('code').value = evt.target.result;
        editor.setValue(evt.target.result);
      }
    };

    var blob = file.slice(start, stop + 1);
    reader.readAsBinaryString(blob);
  }

  document.querySelector('.readBytesButtons').addEventListener('click', function(evt) {
    if (evt.target.tagName.toLowerCase() == 'span') {
      var startByte = evt.target.getAttribute('data-startbyte');
      var endByte = evt.target.getAttribute('data-endbyte');
      readBlob(startByte, endByte);
    }
  }, false);
</script>
<script>
document.getElementById('editor').addEventListener('keyup',
function(){
var sz=document.getElementById('code').value=editor.getValue();
})
</script>
